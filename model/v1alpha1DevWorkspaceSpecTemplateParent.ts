/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { V1alpha1DevWorkspaceSpecTemplateParentCommands } from './v1alpha1DevWorkspaceSpecTemplateParentCommands';
import { V1alpha1DevWorkspaceSpecTemplateParentComponents } from './v1alpha1DevWorkspaceSpecTemplateParentComponents';
import { V1alpha1DevWorkspaceSpecTemplateParentKubernetes } from './v1alpha1DevWorkspaceSpecTemplateParentKubernetes';
import { V1alpha1DevWorkspaceSpecTemplateParentProjects } from './v1alpha1DevWorkspaceSpecTemplateParentProjects';
import { V1alpha1DevWorkspaceSpecTemplateParentStarterProjects } from './v1alpha1DevWorkspaceSpecTemplateParentStarterProjects';

/**
* Parent workspace template
*/
export class V1alpha1DevWorkspaceSpecTemplateParent {
    /**
    * Overrides of commands encapsulated in a parent devfile or a plugin. Overriding is done using a strategic merge patch
    */
    'commands'?: Array<V1alpha1DevWorkspaceSpecTemplateParentCommands>;
    /**
    * Overrides of components encapsulated in a parent devfile. Overriding is done using a strategic merge patch
    */
    'components'?: Array<V1alpha1DevWorkspaceSpecTemplateParentComponents>;
    /**
    * Id in a registry that contains a Devfile yaml file
    */
    'id'?: string;
    /**
    * type of location from where the referenced template structure should be retrieved
    */
    'importReferenceType'?: V1alpha1DevWorkspaceSpecTemplateParent.ImportReferenceTypeEnum;
    'kubernetes'?: V1alpha1DevWorkspaceSpecTemplateParentKubernetes;
    /**
    * Overrides of projects encapsulated in a parent devfile. Overriding is done using a strategic merge patch.
    */
    'projects'?: Array<V1alpha1DevWorkspaceSpecTemplateParentProjects>;
    'registryUrl'?: string;
    /**
    * Overrides of starter projects encapsulated in a parent devfile Overriding is done using a strategic merge patch.
    */
    'starterProjects'?: Array<V1alpha1DevWorkspaceSpecTemplateParentStarterProjects>;
    /**
    * Uri of a Devfile yaml file
    */
    'uri'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "commands",
            "baseName": "commands",
            "type": "Array<V1alpha1DevWorkspaceSpecTemplateParentCommands>"
        },
        {
            "name": "components",
            "baseName": "components",
            "type": "Array<V1alpha1DevWorkspaceSpecTemplateParentComponents>"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "importReferenceType",
            "baseName": "importReferenceType",
            "type": "V1alpha1DevWorkspaceSpecTemplateParent.ImportReferenceTypeEnum"
        },
        {
            "name": "kubernetes",
            "baseName": "kubernetes",
            "type": "V1alpha1DevWorkspaceSpecTemplateParentKubernetes"
        },
        {
            "name": "projects",
            "baseName": "projects",
            "type": "Array<V1alpha1DevWorkspaceSpecTemplateParentProjects>"
        },
        {
            "name": "registryUrl",
            "baseName": "registryUrl",
            "type": "string"
        },
        {
            "name": "starterProjects",
            "baseName": "starterProjects",
            "type": "Array<V1alpha1DevWorkspaceSpecTemplateParentStarterProjects>"
        },
        {
            "name": "uri",
            "baseName": "uri",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return V1alpha1DevWorkspaceSpecTemplateParent.attributeTypeMap;
    }
}

export namespace V1alpha1DevWorkspaceSpecTemplateParent {
    export enum ImportReferenceTypeEnum {
        Uri = <any> 'Uri',
        Id = <any> 'Id',
        Kubernetes = <any> 'Kubernetes'
    }
}
